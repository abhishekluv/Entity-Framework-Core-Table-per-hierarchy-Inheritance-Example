// <auto-generated />
using EFCoreTablePerHierarchyInheritance.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreTablePerHierarchyInheritance.Migrations
{
    [DbContext(typeof(MyApplicationContext))]
    partial class MyApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreTablePerHierarchyInheritance.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Vehicle");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("EFCoreTablePerHierarchyInheritance.Models.Car", b =>
                {
                    b.HasBaseType("EFCoreTablePerHierarchyInheritance.Models.Vehicle");

                    b.Property<int>("TrunkSize")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Car");
                });

            modelBuilder.Entity("EFCoreTablePerHierarchyInheritance.Models.Motorcycle", b =>
                {
                    b.HasBaseType("EFCoreTablePerHierarchyInheritance.Models.Vehicle");

                    b.Property<int>("EnginePower")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Motorcycle");
                });
#pragma warning restore 612, 618
        }
    }
}
